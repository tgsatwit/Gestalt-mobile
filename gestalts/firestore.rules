rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions for authentication and data validation
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isValidUserData() {
      return request.resource.data.keys().hasAll(['id', 'email', 'displayName']) &&
             request.resource.data.id == request.auth.uid &&
             request.resource.data.email is string &&
             request.resource.data.displayName is string;
    }
    
    // Users can read and write their own profile
    match /users/{userId} {
      allow read, write: if isOwner(userId);
      // Allow creation with proper data validation
      allow create: if isOwner(userId) && isValidUserData();
    }
    
    // Users can read and write their own child profiles
    match /childProfiles/{profileId} {
      allow read, write: if isAuthenticated() && 
                           request.auth.uid == resource.data.userId;
      allow create: if isAuthenticated() && 
                     request.auth.uid == request.resource.data.userId;
    }
    
    // Users can read and write their own stories
    match /stories/{storyId} {
      allow read, write: if isAuthenticated() && 
                           request.auth.uid == resource.data.userId;
      allow create: if isAuthenticated() && 
                     request.auth.uid == request.resource.data.userId;
    }
    
    // Users can read and write their own memories
    match /memories/{memoryId} {
      allow read, write: if isAuthenticated() && 
                           request.auth.uid == resource.data.userId;
      allow create: if isAuthenticated() && 
                     request.auth.uid == request.resource.data.userId;
    }
    
    // Users can read and write their own journals/milestones
    match /journals/{journalId} {
      allow read, write: if isAuthenticated() && 
                           request.auth.uid == resource.data.userId;
      allow create: if isAuthenticated() && 
                     request.auth.uid == request.resource.data.userId;
    }
    
    match /milestones/{milestoneId} {
      allow read, write: if isAuthenticated() && 
                           request.auth.uid == resource.data.userId;
      allow create: if isAuthenticated() && 
                     request.auth.uid == request.resource.data.userId;
    }
    
    // Users can read and write their own characters (for storybook)
    match /characters/{characterId} {
      allow read, write: if isAuthenticated() && 
                           request.auth.uid == resource.data.userId;
      allow create: if isAuthenticated() && 
                     request.auth.uid == request.resource.data.userId;
    }
    
    // Deny all other document access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}